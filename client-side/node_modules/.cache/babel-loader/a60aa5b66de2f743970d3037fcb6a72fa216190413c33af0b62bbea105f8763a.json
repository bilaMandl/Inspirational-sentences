{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ME\\\\Desktop\\\\\\u05D1\\u05DC\\u05D9 \\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\node.js\\\\finalProject\\\\client-side\\\\src\\\\components\\\\backgrounds.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getAllBackgrounds } from \"../serivces/backgroundService\";\nimport { addBack, getMyBack, removeBack } from \"../serivces/userService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Backgrounds = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [imageLoadErrors, setImageLoadErrors] = useState(new Set());\n  const userId = JSON.parse(localStorage.getItem(\"user\")).id;\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const data = await getAllBackgrounds();\n        const validImage = data.map(img => ({\n          ...img,\n          url: convertDriveUrl(img.url)\n        }));\n        setImages(prevImage => {\n          const isSame = JSON.stringify(prevImage) === JSON.stringify(validImage);\n          return isSame ? prevImage : validImage;\n        });\n      } catch (error) {\n        console.error(\"Error fetching images:\", error);\n      }\n    };\n    const fetchFavorites = async () => {\n      try {\n        const myBackgrounds = await getMyBack(userId);\n        setFavorites(myBackgrounds);\n      } catch (err) {\n        console.error(\"Error fetching favorites:\", err);\n      }\n    };\n    fetchImages();\n    fetchFavorites();\n  }, []);\n  const convertDriveUrl = originalUrl => {\n    if (!originalUrl) return '/d.jpg';\n    const fileIdMatch = originalUrl.match(/[-\\w]{25,}/);\n    return fileIdMatch ? `https://drive.google.com/thumbnail?id=${fileIdMatch[0]}&sz=w1000` : originalUrl;\n  };\n  const like = async id => {\n    try {\n      console.log(Number(id));\n      if (favorites.includes(id)) {\n        await removeBack(id);\n      } else {\n        let d = await addBack(userid);\n        console.log(d);\n      }\n      const updatedFavorites = await getMyBack(userId);\n      setFavorites(updatedFavorites);\n      console.log(updatedFavorites);\n    } catch (err) {\n      console.error(\"Failed to update favorite:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-container\",\n    children: images.length > 0 ? images.map((img, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: img.url,\n        alt: `Image ${index}`,\n        width: \"200\",\n        onError: e => {\n          if (!imageLoadErrors.has(img.url)) {\n            setImageLoadErrors(prev => new Set(prev).add(img.url));\n\n            // נסה לטעון מחדש את התמונה אחרי 30 שניות\n            setTimeout(() => {\n              e.target.src = img.url; // לנסות לטעון את התמונה שוב\n            }, 30000);\n            e.target.src = \"/d.jpg\"; // הצג תמונה ברירת מחדל במקרה של שגיאה\n            console.error(\"Image failed to load:\", e.target.src);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"heart-button\",\n          onClick: () => like(Number(img.id)),\n          children: \"like!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }, this)]\n    }, img.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading images...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Backgrounds, \"9+LGo0mH01s4RQvcgRypbt3lf5I=\");\n_c = Backgrounds;\nvar _c;\n$RefreshReg$(_c, \"Backgrounds\");","map":{"version":3,"names":["useEffect","useState","getAllBackgrounds","addBack","getMyBack","removeBack","jsxDEV","_jsxDEV","Backgrounds","_s","images","setImages","favorites","setFavorites","imageLoadErrors","setImageLoadErrors","Set","userId","JSON","parse","localStorage","getItem","id","fetchImages","data","validImage","map","img","url","convertDriveUrl","prevImage","isSame","stringify","error","console","fetchFavorites","myBackgrounds","err","originalUrl","fileIdMatch","match","like","log","Number","includes","d","userid","updatedFavorites","className","children","length","index","src","alt","width","onError","e","has","prev","add","setTimeout","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ME/Desktop/בלי תכנות/node.js/finalProject/client-side/src/components/backgrounds.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { getAllBackgrounds } from \"../serivces/backgroundService\";\r\nimport { addBack, getMyBack, removeBack } from \"../serivces/userService\";\r\n\r\nexport const Backgrounds = () => {\r\n    const [images, setImages] = useState([]);\r\n    const [favorites, setFavorites] = useState([]);\r\n    const [imageLoadErrors, setImageLoadErrors] = useState(new Set());\r\n    const userId = JSON.parse(localStorage.getItem(\"user\")).id;\r\n\r\n    useEffect(() => {\r\n        const fetchImages = async () => {\r\n            try {\r\n                const data = await getAllBackgrounds();\r\n                const validImage = data.map(img => ({ ...img, url: convertDriveUrl(img.url) }));\r\n\r\n                setImages(prevImage => {\r\n                    const isSame = JSON.stringify(prevImage) === JSON.stringify(validImage);\r\n                    return isSame ? prevImage : validImage;\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Error fetching images:\", error);\r\n            }\r\n        };\r\n\r\n        const fetchFavorites = async () => {\r\n            try {\r\n                const myBackgrounds = await getMyBack(userId);\r\n                setFavorites(myBackgrounds);\r\n            } catch (err) {\r\n                console.error(\"Error fetching favorites:\", err);\r\n            }\r\n        };\r\n\r\n        fetchImages();\r\n        fetchFavorites();\r\n    }, []);\r\n\r\n    const convertDriveUrl = (originalUrl) => {\r\n        if (!originalUrl) return '/d.jpg';\r\n        const fileIdMatch = originalUrl.match(/[-\\w]{25,}/);\r\n        return fileIdMatch ? `https://drive.google.com/thumbnail?id=${fileIdMatch[0]}&sz=w1000` : originalUrl;\r\n    };\r\n\r\n    const like = async (id) => {\r\n        try {\r\n            console.log(Number(id));\r\n            \r\n            if (favorites.includes(id)) {\r\n                await removeBack(id);\r\n            } else {\r\n               let d = await addBack(userid);\r\n               console.log(d);\r\n               \r\n            }\r\n            const updatedFavorites = await getMyBack(userId);\r\n            setFavorites(updatedFavorites);\r\n            console.log(updatedFavorites);\r\n            \r\n        } catch (err) {\r\n            console.error(\"Failed to update favorite:\", err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"image-container\">\r\n            {images.length > 0 ? (\r\n                images.map((img, index) => (\r\n                    <div key={img.id} className=\"image-wrapper\">    \r\n                        <img\r\n                            src={img.url}\r\n                            alt={`Image ${index}`}\r\n                            width=\"200\"\r\n                            onError={(e) => {\r\n                                if (!imageLoadErrors.has(img.url)) {\r\n                                    setImageLoadErrors(prev => new Set(prev).add(img.url));\r\n\r\n                                    // נסה לטעון מחדש את התמונה אחרי 30 שניות\r\n                                    setTimeout(() => {\r\n                                        e.target.src = img.url; // לנסות לטעון את התמונה שוב\r\n                                    }, 30000);\r\n                                    \r\n                                    e.target.src = \"/d.jpg\"; // הצג תמונה ברירת מחדל במקרה של שגיאה\r\n                                    console.error(\"Image failed to load:\", e.target.src);\r\n                                }\r\n                            }}\r\n                        />\r\n                        <div className=\"button-container\">\r\n                            <button className=\"heart-button\" onClick={() => like(Number(img.id))}>like!</button>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>Loading images...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}