{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ME\\\\Desktop\\\\\\u05D1\\u05DC\\u05D9 \\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\node.js\\\\finalProject\\\\client-side\\\\src\\\\components\\\\backgrounds.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getAllBackgrounds } from \"../serivces/backgroundService\";\nimport { addBack, getMyBack, removeBack } from \"../serivces/userService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Backgrounds = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [imageLoadErrors, setImageLoadErrors] = useState(new Set());\n  const userId = JSON.parse(localStorage.getItem(\"user\")).id;\n\n  // useEffect(() => {\n  //     const imgShowing = async () => {\n  //         try {\n  //             const data = await getAllBackgrounds();\n  //             const validImages = data.map(img => ({\n  //                 ...img,\n  //                 url: convertDriveUrl(img.url),\n  //             }));\n  //             setImages(validImages);\n  //         } catch (error) {\n  //             console.error(\"Failed to fetch backgrounds:\", error);\n  //         }\n  //     };\n\n  //     imgShowing();\n  // }, []);\n\n  // const handleFavoriteClick = async (id) => {\n  //     try {\n  //         if (favorites.includes(id)) {\n  //             await removeBack(userId, id);\n  //         } else {\n  //             await addBack(userId, id);\n  //         }\n  //         const userFavorites = await getMyBack(userId);\n  //         setFavorites(userFavorites);\n  //     } catch (err) {\n  //         console.error(\"Failed to update favorite:\", err);\n  //     }\n  // };\n\n  // const convertDriveUrl = (originalUrl) => {\n  //     if (!originalUrl)             return \"/d.jpg\"\n\n  //     const fileIdMatch = originalUrl.match(/[-\\w]{25,}/);\n  //     if (!fileIdMatch) {\n  //         console.warn(\"Invalid URL:\", originalUrl);\n  //         return \"/d.jpg\"\n  //     }\n  //     const convertedUrl = `https://drive.google.com/uc?export=view&id=${fileIdMatch[0]}`;\n  //     console.log(\"Original URL:\", originalUrl);\n  //     console.log(\"Converted URL:\", convertedUrl);\n  //     return convertedUrl;\n  // };\n\n  // const like = async (id) => {\n  //     try {\n  //         if (favorites.includes(id)) {\n  //             await removeBack(id);\n  //         } else {\n  //             await addBack(id);\n  //         }\n  //         const updatedFavorites = await getMyBack();\n  //         setFavorites(updatedFavorites);\n  //     } catch (error) {\n  //         console.error(\"Failed to update favorite:\", error);\n  //     }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: images.length > 0 ? images.map((img, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: img.url,\n        alt: `Image ${index}`,\n        width: \"200\",\n        onError: e => {\n          if (!imageLoadErrors.has(img.url)) {\n            setImageLoadErrors(prev => new Set(prev).add(img.url));\n            e.target.src = \"/d.jpg\";\n            console.error(\"Image failed to load:\", e.target.src);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"heart-button\",\n          onClick: () => like(img.id),\n          children: \"like!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this)]\n    }, img.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading images...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(Backgrounds, \"qEgOMG/+5O1qZaFMS2tHVKI1+YE=\");\n_c = Backgrounds;\nvar _c;\n$RefreshReg$(_c, \"Backgrounds\");","map":{"version":3,"names":["useEffect","useState","getAllBackgrounds","addBack","getMyBack","removeBack","jsxDEV","_jsxDEV","Backgrounds","_s","images","setImages","favorites","setFavorites","imageLoadErrors","setImageLoadErrors","Set","userId","JSON","parse","localStorage","getItem","id","children","length","map","img","index","className","src","url","alt","width","onError","e","has","prev","add","target","console","error","fileName","_jsxFileName","lineNumber","columnNumber","onClick","like","_c","$RefreshReg$"],"sources":["C:/Users/ME/Desktop/בלי תכנות/node.js/finalProject/client-side/src/components/backgrounds.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { getAllBackgrounds } from \"../serivces/backgroundService\";\r\nimport { addBack, getMyBack, removeBack } from \"../serivces/userService\";\r\n\r\n\r\nexport const Backgrounds = () => {\r\n    const [images, setImages] = useState([]);\r\n    const [favorites, setFavorites] = useState([]);\r\n    const [imageLoadErrors, setImageLoadErrors] = useState(new Set());\r\n    const userId = JSON.parse(localStorage.getItem(\"user\")).id;\r\n\r\n    // useEffect(() => {\r\n    //     const imgShowing = async () => {\r\n    //         try {\r\n    //             const data = await getAllBackgrounds();\r\n    //             const validImages = data.map(img => ({\r\n    //                 ...img,\r\n    //                 url: convertDriveUrl(img.url),\r\n    //             }));\r\n    //             setImages(validImages);\r\n    //         } catch (error) {\r\n    //             console.error(\"Failed to fetch backgrounds:\", error);\r\n    //         }\r\n    //     };\r\n\r\n    //     imgShowing();\r\n    // }, []);\r\n\r\n    // const handleFavoriteClick = async (id) => {\r\n    //     try {\r\n    //         if (favorites.includes(id)) {\r\n    //             await removeBack(userId, id);\r\n    //         } else {\r\n    //             await addBack(userId, id);\r\n    //         }\r\n    //         const userFavorites = await getMyBack(userId);\r\n    //         setFavorites(userFavorites);\r\n    //     } catch (err) {\r\n    //         console.error(\"Failed to update favorite:\", err);\r\n    //     }\r\n    // };\r\n\r\n    // const convertDriveUrl = (originalUrl) => {\r\n    //     if (!originalUrl)             return \"/d.jpg\"\r\n\r\n    //     const fileIdMatch = originalUrl.match(/[-\\w]{25,}/);\r\n    //     if (!fileIdMatch) {\r\n    //         console.warn(\"Invalid URL:\", originalUrl);\r\n    //         return \"/d.jpg\"\r\n    //     }\r\n    //     const convertedUrl = `https://drive.google.com/uc?export=view&id=${fileIdMatch[0]}`;\r\n    //     console.log(\"Original URL:\", originalUrl);\r\n    //     console.log(\"Converted URL:\", convertedUrl);\r\n    //     return convertedUrl;\r\n    // };\r\n    \r\n\r\n    // const like = async (id) => {\r\n    //     try {\r\n    //         if (favorites.includes(id)) {\r\n    //             await removeBack(id);\r\n    //         } else {\r\n    //             await addBack(id);\r\n    //         }\r\n    //         const updatedFavorites = await getMyBack();\r\n    //         setFavorites(updatedFavorites);\r\n    //     } catch (error) {\r\n    //         console.error(\"Failed to update favorite:\", error);\r\n    //     }\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n            {images.length > 0 ? (\r\n                images.map((img, index) => (\r\n                    <div key={img.id} className=\"image-wrapper\">\r\n                        <img\r\n                            src={img.url}\r\n                            alt={`Image ${index}`}\r\n                            width=\"200\"\r\n                            onError={(e) => {\r\n                                if (!imageLoadErrors.has(img.url)) {\r\n                                    setImageLoadErrors(prev => new Set(prev).add(img.url));\r\n                                    e.target.src =\"/d.jpg\";\r\n                                    console.error(\"Image failed to load:\", e.target.src);\r\n                                }\r\n                            }}\r\n                        />\r\n                        <div className=\"button-container\">\r\n                            <button className=\"heart-button\" onClick={() => like(img.id)}>like!</button>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>Loading images...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}