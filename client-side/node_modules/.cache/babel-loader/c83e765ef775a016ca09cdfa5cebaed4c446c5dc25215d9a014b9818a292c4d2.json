{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ME\\\\Desktop\\\\\\u05D1\\u05DC\\u05D9 \\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\node.js\\\\finalProject\\\\client-side\\\\src\\\\components\\\\backgrounds.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Backgrounds = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [imageLoadErrors, setImageLoadErrors] = useState(new Set());\n  const userId = JSON.parse(localStorage.getItem(\"user\")).id;\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const data = await getAllBackgrounds();\n        const validImage = data.map(img => ({\n          ...img,\n          url: convertDriveUrl(img.url)\n        }));\n        setImages(prevImage => JSON.stringify(prevImage) === JSON.stringify(validImage) ? prevImage : validImage);\n      } catch (error) {\n        console.error(\"Error fetching images:\", error);\n      }\n    };\n    const fetchFavorites = async () => {\n      try {\n        const myBackgrounds = await getMyBack(userId);\n        setFavorites(myBackgrounds);\n      } catch (err) {\n        console.error(\"Error fetching favorites:\", err);\n      }\n    };\n    fetchImages();\n    fetchFavorites();\n  }, []);\n  const convertDriveUrl = originalUrl => {\n    if (!originalUrl) return '/d.jpg';\n    const fileIdMatch = originalUrl.match(/[-\\w]{25,}/);\n    return fileIdMatch ? `https://drive.google.com/thumbnail?id=${fileIdMatch[0]}&sz=w1000` : originalUrl;\n  };\n  const like = async id => {\n    try {\n      if (favorites.includes(id)) {\n        await removeBack(userId, id);\n      } else {\n        await addBack(userId, id);\n      }\n      const updatedFavorites = await getMyBack(userId);\n      setFavorites(updatedFavorites);\n    } catch (err) {\n      console.error(\"Failed to update favorite:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-container\",\n    children: images.length > 0 ? images.map((img, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: img.url,\n        alt: `Image ${index}`,\n        width: \"200\",\n        onError: e => {\n          if (!imageLoadErrors.has(img.url)) {\n            setImageLoadErrors(prev => new Set(prev).add(img.url));\n            setTimeout(() => {\n              e.target.src = img.url;\n            }, 30000);\n            e.target.src = \"/d.jpg\";\n            console.error(\"Image failed to load:\", e.target.src);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"heart-button\",\n          onClick: () => like(Number(img.id)),\n          style: {\n            color: favorites.includes(img.id) ? \"red\" : \"black\"\n          },\n          children: \"LIKE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this)]\n    }, img.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading images...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Backgrounds, \"9+LGo0mH01s4RQvcgRypbt3lf5I=\");\n_c = Backgrounds;\nvar _c;\n$RefreshReg$(_c, \"Backgrounds\");","map":{"version":3,"names":["Backgrounds","_s","images","setImages","useState","favorites","setFavorites","imageLoadErrors","setImageLoadErrors","Set","userId","JSON","parse","localStorage","getItem","id","useEffect","fetchImages","data","getAllBackgrounds","validImage","map","img","url","convertDriveUrl","prevImage","stringify","error","console","fetchFavorites","myBackgrounds","getMyBack","err","originalUrl","fileIdMatch","match","like","includes","removeBack","addBack","updatedFavorites","_jsxDEV","className","children","length","index","src","alt","width","onError","e","has","prev","add","setTimeout","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Number","style","color","_c","$RefreshReg$"],"sources":["C:/Users/ME/Desktop/בלי תכנות/node.js/finalProject/client-side/src/components/backgrounds.jsx"],"sourcesContent":["export const Backgrounds = () => {\r\n    const [images, setImages] = useState([]);\r\n    const [favorites, setFavorites] = useState([]);\r\n    const [imageLoadErrors, setImageLoadErrors] = useState(new Set());\r\n    const userId = JSON.parse(localStorage.getItem(\"user\")).id;\r\n\r\n    useEffect(() => {\r\n        const fetchImages = async () => {\r\n            try {\r\n                const data = await getAllBackgrounds();\r\n                const validImage = data.map(img => ({ ...img, url: convertDriveUrl(img.url) }));\r\n                setImages(prevImage => JSON.stringify(prevImage) === JSON.stringify(validImage) ? prevImage : validImage);\r\n            } catch (error) {\r\n                console.error(\"Error fetching images:\", error);\r\n            }\r\n        };\r\n\r\n        const fetchFavorites = async () => {\r\n            try {\r\n                const myBackgrounds = await getMyBack(userId);\r\n                setFavorites(myBackgrounds);\r\n            } catch (err) {\r\n                console.error(\"Error fetching favorites:\", err);\r\n            }\r\n        };\r\n\r\n        fetchImages();\r\n        fetchFavorites();\r\n    }, []);\r\n\r\n    const convertDriveUrl = (originalUrl) => {\r\n        if (!originalUrl) return '/d.jpg';\r\n        const fileIdMatch = originalUrl.match(/[-\\w]{25,}/);\r\n        return fileIdMatch ? `https://drive.google.com/thumbnail?id=${fileIdMatch[0]}&sz=w1000` : originalUrl;\r\n    };\r\n\r\n    const like = async (id) => {\r\n        try {\r\n            if (favorites.includes(id)) {\r\n                await removeBack(userId, id);\r\n            } else {\r\n                await addBack(userId, id);\r\n            }\r\n            const updatedFavorites = await getMyBack(userId);\r\n            setFavorites(updatedFavorites);\r\n        } catch (err) {\r\n            console.error(\"Failed to update favorite:\", err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"image-container\">\r\n            {images.length > 0 ? (\r\n                images.map((img, index) => (\r\n                    <div key={img.id} className=\"image-wrapper\">\r\n                        <img\r\n                            src={img.url}\r\n                            alt={`Image ${index}`}\r\n                            width=\"200\"\r\n                            onError={(e) => {\r\n                                if (!imageLoadErrors.has(img.url)) {\r\n                                    setImageLoadErrors(prev => new Set(prev).add(img.url));\r\n                                    setTimeout(() => { e.target.src = img.url; }, 30000);\r\n                                    e.target.src = \"/d.jpg\";\r\n                                    console.error(\"Image failed to load:\", e.target.src);\r\n                                }\r\n                            }}\r\n                        />\r\n                        <div className=\"button-container\">\r\n                            <button\r\n                                className=\"heart-button\"\r\n                                onClick={() => like(Number(img.id))}\r\n                                style={{ color: favorites.includes(img.id) ? \"red\" : \"black\" }}\r\n                            >\r\n                                LIKE\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>Loading images...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}