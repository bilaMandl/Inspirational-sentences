{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ME\\\\Desktop\\\\\\u05D1\\u05DC\\u05D9 \\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\node.js\\\\finalProject\\\\client-side\\\\src\\\\components\\\\backgrounds.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getAllBackgrounds } from \"../serivces/backgroundService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Backgrounds = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [imageLoadErrors, setImageLoadErrors] = useState(new Set());\n  const userId = JSON.parse(localStorage.getItem(\"user\")).id;\n  useEffect(() => {\n    const imgShowing = async () => {\n      try {\n        const data = await getAllBackgrounds();\n        const validImages = data.map(img => ({\n          ...img,\n          url: convertDriveUrl(img.url)\n        }));\n        setImages(validImages);\n      } catch (error) {\n        console.error(\"Failed to fetch backgrounds:\", error);\n      }\n    };\n    imgShowing();\n  }, []);\n  const handleFavoriteClick = async id => {\n    try {\n      if (favorites.includes(id)) {\n        await removeBack(userId, id);\n      } else {\n        await addBack(userId, id);\n      }\n      const userFavorites = await getMyBack(userId);\n      setFavorites(userFavorites);\n    } catch (err) {\n      console.error(\"Failed to update favorite:\", err);\n    }\n  };\n  const convertDriveUrl = originalUrl => {\n    if (!originalUrl) return \"/fallback-image-url\";\n    const fileIdMatch = originalUrl.match(/[-\\w]{25,}/);\n    if (!fileIdMatch) {\n      console.warn(\"Invalid URL:\", originalUrl);\n      return \"/fallback-image-url\";\n    }\n    const convertedUrl = `https://drive.google.com/thumbnail?id=${fileIdMatch[0]}&sz=w1000`;\n    console.log(\"Original URL:\", originalUrl);\n    console.log(\"Converted URL:\", convertedUrl);\n    return convertedUrl;\n  };\n  const like = async id => {\n    try {\n      if (favorites.includes(id)) {\n        await removeBack(id);\n      } else {\n        await addBack(id);\n      }\n      const updatedFavorites = await getMyBack();\n      setFavorites(updatedFavorites);\n    } catch (error) {\n      console.error(\"Failed to update favorite:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: images.length > 0 ? images.map((img, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: img.url,\n        alt: `Image ${index}`,\n        width: \"200\",\n        onError: e => {\n          if (!imageLoadErrors.has(img.url)) {\n            setImageLoadErrors(prev => new Set(prev).add(img.url));\n            e.target.src = \"/fallback-image-url\";\n            console.error(\"Image failed to load:\", e.target.src);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"heart-button\",\n          onClick: () => like(img.id),\n          children: \"like!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this)]\n    }, img.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading images...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(Backgrounds, \"9+LGo0mH01s4RQvcgRypbt3lf5I=\");\n_c = Backgrounds;\nvar _c;\n$RefreshReg$(_c, \"Backgrounds\");","map":{"version":3,"names":["useEffect","useState","getAllBackgrounds","jsxDEV","_jsxDEV","Backgrounds","_s","images","setImages","favorites","setFavorites","imageLoadErrors","setImageLoadErrors","Set","userId","JSON","parse","localStorage","getItem","id","imgShowing","data","validImages","map","img","url","convertDriveUrl","error","console","handleFavoriteClick","includes","removeBack","addBack","userFavorites","getMyBack","err","originalUrl","fileIdMatch","match","warn","convertedUrl","log","like","updatedFavorites","children","length","index","className","src","alt","width","onError","e","has","prev","add","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ME/Desktop/בלי תכנות/node.js/finalProject/client-side/src/components/backgrounds.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { getAllBackgrounds } from \"../serivces/backgroundService\";\r\n\r\n\r\nexport const Backgrounds = () => {\r\n    const [images, setImages] = useState([]);\r\n    const [favorites, setFavorites] = useState([]);\r\n    const [imageLoadErrors, setImageLoadErrors] = useState(new Set());\r\n    const userId = JSON.parse(localStorage.getItem(\"user\")).id;\r\n\r\n    useEffect(() => {\r\n        const imgShowing = async () => {\r\n            try {\r\n                const data = await getAllBackgrounds();\r\n                const validImages = data.map(img => ({\r\n                    ...img,\r\n                    url: convertDriveUrl(img.url),\r\n                }));\r\n                setImages(validImages);\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch backgrounds:\", error);\r\n            }\r\n        };\r\n\r\n        imgShowing();\r\n    }, []);\r\n\r\n    const handleFavoriteClick = async (id) => {\r\n        try {\r\n            if (favorites.includes(id)) {\r\n                await removeBack(userId, id);\r\n            } else {\r\n                await addBack(userId, id);\r\n            }\r\n            const userFavorites = await getMyBack(userId);\r\n            setFavorites(userFavorites);\r\n        } catch (err) {\r\n            console.error(\"Failed to update favorite:\", err);\r\n        }\r\n    };\r\n\r\n    const convertDriveUrl = (originalUrl) => {\r\n        if (!originalUrl) return \"/fallback-image-url\";\r\n        const fileIdMatch = originalUrl.match(/[-\\w]{25,}/);\r\n        if (!fileIdMatch) {\r\n            console.warn(\"Invalid URL:\", originalUrl);\r\n            return \"/fallback-image-url\";\r\n        }\r\n        const convertedUrl = `https://drive.google.com/thumbnail?id=${fileIdMatch[0]}&sz=w1000`;\r\n        console.log(\"Original URL:\", originalUrl);\r\n        console.log(\"Converted URL:\", convertedUrl);\r\n        return convertedUrl;\r\n    };\r\n\r\n    const like = async (id) => {\r\n        try {\r\n            if (favorites.includes(id)) {\r\n                await removeBack(id);\r\n            } else {\r\n                await addBack(id);\r\n            }\r\n            const updatedFavorites = await getMyBack();\r\n            setFavorites(updatedFavorites);\r\n        } catch (error) {\r\n            console.error(\"Failed to update favorite:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {images.length > 0 ? (\r\n                images.map((img, index) => (\r\n                    <div key={img.id} className=\"image-wrapper\">\r\n                        <img\r\n                            src={img.url}\r\n                            alt={`Image ${index}`}\r\n                            width=\"200\"\r\n                            onError={(e) => {\r\n                                if (!imageLoadErrors.has(img.url)) {\r\n                                    setImageLoadErrors(prev => new Set(prev).add(img.url));\r\n                                    e.target.src = \"/fallback-image-url\";\r\n                                    console.error(\"Image failed to load:\", e.target.src);\r\n                                }\r\n                            }}\r\n                        />\r\n                        <div className=\"button-container\">\r\n                            <button className=\"heart-button\" onClick={() => like(img.id)}>like!</button>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>Loading images...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}