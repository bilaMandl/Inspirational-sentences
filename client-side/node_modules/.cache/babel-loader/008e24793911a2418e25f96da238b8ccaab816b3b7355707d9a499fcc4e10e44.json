{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ME\\\\Desktop\\\\\\u05D1\\u05DC\\u05D9 \\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\node.js\\\\finalProject\\\\client-side\\\\src\\\\components\\\\newArt.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getMyBack, getMyQuo } from \"../serivces/userService\";\nimport { getAllQuotes } from \"../serivces/quoteService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NewArt = ({\n  onCreate\n}) => {\n  _s();\n  const [userQuotes, setUserQuotes] = useState([]);\n  const [userBacks, setUserBacks] = useState([]);\n  const [selectedQuote, setSelectedQuote] = useState(null);\n  const [selectedBackground, setSelectedBackground] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // שליפת ציטוטים של המשתמש\n        const userQuoteIds = await getMyQuo();\n        const allQuotes = await getAllQuotes();\n        const filteredQuotes = allQuotes.filter(quote => userQuoteIds.includes(quote.Id.toString()));\n        setUserQuotes(filteredQuotes);\n\n        // שליפת רקעים של המשתמש\n        const userBackIds = await getMyBack();\n        const allBacks = await getAllBackgrounds();\n        const filteredBacks = allBacks.filter(back => userBackIds.includes(back.Id.toString()));\n        setUserBacks(filteredBacks);\n      } catch (err) {\n        console.error(\"Error fetching data:\", err);\n      }\n    };\n    fetchData();\n  }, []);\n  const convertDriveUrl = originalUrl => {\n    if (!originalUrl) return '/jjj.jpg';\n    const fileIdMatch = originalUrl.match(/[-\\w]{25,}/);\n    return fileIdMatch ? `https://drive.google.com/thumbnail?id=${fileIdMatch[0]}&sz=w1000` : originalUrl;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"choose-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u05D1\\u05D7\\u05E8 \\u05E6\\u05D9\\u05D8\\u05D5\\u05D8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), userQuotes.length > 0 ? userQuotes.map(quote => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `quote-item ${selectedQuote === quote.Id ? \"selected\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"quote\",\n          checked: selectedQuote === quote.Id,\n          onChange: () => setSelectedQuote(quote.Id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"quote-text\",\n          children: quote.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this)]\n      }, quote.Id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u05D0\\u05D9\\u05DF \\u05DC\\u05DA \\u05E6\\u05D9\\u05D8\\u05D5\\u05D8\\u05D9\\u05DD \\u05E2\\u05D3\\u05D9\\u05D9\\u05DF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u05D1\\u05D7\\u05E8 \\u05E8\\u05E7\\u05E2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), userBacks.length > 0 ? userBacks.map(img => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `background-item ${selectedBackground === img.Id ? \"selected\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"background\",\n          checked: selectedBackground === img.Id,\n          onChange: () => setSelectedBackground(img.Id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: convertDriveUrl(img.url),\n          alt: img.name,\n          width: \"200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this)]\n      }, img.Id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u05D0\\u05D9\\u05DF \\u05DC\\u05DA \\u05E8\\u05E7\\u05E2\\u05D9\\u05DD \\u05E2\\u05D3\\u05D9\\u05D9\\u05DF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), selectedQuote && selectedBackground && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create-button\",\n      onClick: () => onCreate(selectedQuote, selectedBackground),\n      children: \"\\u05E6\\u05D5\\u05E8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(NewArt, \"OU+O+RPPy/WqxxeD+eo/i6XcLxs=\");\n_c = NewArt;\nvar _c;\n$RefreshReg$(_c, \"NewArt\");","map":{"version":3,"names":["React","useEffect","useState","getMyBack","getMyQuo","getAllQuotes","jsxDEV","_jsxDEV","NewArt","onCreate","_s","userQuotes","setUserQuotes","userBacks","setUserBacks","selectedQuote","setSelectedQuote","selectedBackground","setSelectedBackground","fetchData","userQuoteIds","allQuotes","filteredQuotes","filter","quote","includes","Id","toString","userBackIds","allBacks","getAllBackgrounds","filteredBacks","back","err","console","error","convertDriveUrl","originalUrl","fileIdMatch","match","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","type","name","checked","onChange","text","img","src","url","alt","width","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ME/Desktop/בלי תכנות/node.js/finalProject/client-side/src/components/newArt.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getMyBack, getMyQuo } from \"../serivces/userService\";\r\nimport { getAllQuotes } from \"../serivces/quoteService\";\r\n\r\n\r\nexport const NewArt = ({ onCreate }) => {\r\n    const [userQuotes, setUserQuotes] = useState([]);\r\n    const [userBacks, setUserBacks] = useState([]);\r\n    const [selectedQuote, setSelectedQuote] = useState(null);\r\n    const [selectedBackground, setSelectedBackground] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                // שליפת ציטוטים של המשתמש\r\n                const userQuoteIds = await getMyQuo();\r\n                const allQuotes = await getAllQuotes();\r\n                const filteredQuotes = allQuotes.filter(quote => userQuoteIds.includes(quote.Id.toString()));\r\n                setUserQuotes(filteredQuotes);\r\n\r\n                // שליפת רקעים של המשתמש\r\n                const userBackIds = await getMyBack();\r\n                const allBacks = await getAllBackgrounds();\r\n                const filteredBacks = allBacks.filter(back => userBackIds.includes(back.Id.toString()));\r\n                setUserBacks(filteredBacks);\r\n            } catch (err) {\r\n                console.error(\"Error fetching data:\", err);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n    const convertDriveUrl = (originalUrl) => {\r\n        if (!originalUrl) return '/jjj.jpg';\r\n        const fileIdMatch = originalUrl.match(/[-\\w]{25,}/);\r\n        return fileIdMatch ? `https://drive.google.com/thumbnail?id=${fileIdMatch[0]}&sz=w1000` : originalUrl;\r\n    };\r\n\r\n    return (\r\n        <div className=\"choose-container\">\r\n            {/* צד ימין - ציטוטים */}\r\n            <div className=\"quote-section\">\r\n                <h2>בחר ציטוט</h2>\r\n                {userQuotes.length > 0 ? (\r\n                    userQuotes.map(quote => (\r\n                        <div key={quote.Id} className={`quote-item ${selectedQuote === quote.Id ? \"selected\" : \"\"}`}>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"quote\"\r\n                                checked={selectedQuote === quote.Id}\r\n                                onChange={() => setSelectedQuote(quote.Id)}\r\n                            />\r\n                            <span className=\"quote-text\">{quote.text}</span>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>אין לך ציטוטים עדיין</p>\r\n                )}\r\n            </div>\r\n\r\n            {/* צד שמאל - רקעים */}\r\n            <div className=\"background-section\">\r\n                <h2>בחר רקע</h2>\r\n                {userBacks.length > 0 ? (\r\n                    userBacks.map(img => (\r\n                        <div key={img.Id} className={`background-item ${selectedBackground === img.Id ? \"selected\" : \"\"}`}>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"background\"\r\n                                checked={selectedBackground === img.Id}\r\n                                onChange={() => setSelectedBackground(img.Id)}\r\n                            />\r\n                            <img src={convertDriveUrl(img.url)} alt={img.name} width=\"200\" />\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>אין לך רקעים עדיין</p>\r\n                )}\r\n            </div>\r\n\r\n            {/* כפתור יצירה */}\r\n            {selectedQuote && selectedBackground && (\r\n                <button className=\"create-button\" onClick={() => onCreate(selectedQuote, selectedBackground)}>\r\n                    צור\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}