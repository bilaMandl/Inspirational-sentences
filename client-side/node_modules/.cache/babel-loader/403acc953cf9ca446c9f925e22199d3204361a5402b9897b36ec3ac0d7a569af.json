{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ME\\\\Desktop\\\\\\u05D1\\u05DC\\u05D9 \\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\node.js\\\\finalProject\\\\client-side\\\\src\\\\components\\\\backgrounds.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getAllBackgrounds } from \"../serivces/backgroundService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Backgrounds = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    const fetchImages = async () => {\n      const data = await getAllBackgrounds();\n      console.log(\"Fetched Data:\", data);\n      setImages(data);\n    };\n    fetchImages();\n  }, []);\n  useEffect(() => {\n    images.forEach(img => console.log(\"Converted:\", convertDriveUrl(img.url)));\n  }, [images]);\n  const convertDriveUrl = originalUrl => {\n    const fileIdMatch = originalUrl.match(/[-\\w]{25,}/);\n    return fileIdMatch ? `        https://drive.google.com/thumbnail?id=FILE_ID&sz=w1000;\n//${fileIdMatch[0]}` : originalUrl;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: images.length > 0 ? images.map((img, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: convertDriveUrl(img.url),\n      alt: `Image ${index}`,\n      width: \"200\",\n      onError: e => console.error(\"Image failed to load:\", e.target.src)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading images...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Backgrounds, \"0Yhy+RSN276FrokK4AGMQ1Wo5E4=\");\n_c = Backgrounds;\nvar _c;\n$RefreshReg$(_c, \"Backgrounds\");","map":{"version":3,"names":["useEffect","useState","getAllBackgrounds","jsxDEV","_jsxDEV","Backgrounds","_s","images","setImages","fetchImages","data","console","log","forEach","img","convertDriveUrl","url","originalUrl","fileIdMatch","match","children","length","map","index","src","alt","width","onError","e","error","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ME/Desktop/בלי תכנות/node.js/finalProject/client-side/src/components/backgrounds.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { getAllBackgrounds } from \"../serivces/backgroundService\";\r\n\r\nexport const Backgrounds = () => {\r\n    const [images, setImages] = useState([]);\r\n    useEffect(() => {\r\n        const fetchImages = async () => {\r\n            const data = await getAllBackgrounds();\r\n            console.log(\"Fetched Data:\", data);\r\n            setImages(data);\r\n        };\r\n\r\n        fetchImages();\r\n    }, []);\r\n    useEffect(() => {\r\n        images.forEach(img => console.log(\"Converted:\", convertDriveUrl(img.url)));\r\n    }, [images]);\r\n\r\n    const convertDriveUrl = (originalUrl) => {\r\n        const fileIdMatch = originalUrl.match(/[-\\w]{25,}/);\r\n\r\n        return fileIdMatch ? `        https://drive.google.com/thumbnail?id=FILE_ID&sz=w1000;\r\n//${fileIdMatch[0]}` : originalUrl;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {images.length > 0 ? (\r\n                images.map((img, index) => (\r\n                    <img\r\n                        key={index}\r\n                        src={convertDriveUrl(img.url)}\r\n                        alt={`Image ${index}`}\r\n                        width=\"200\"\r\n                        onError={(e) => console.error(\"Image failed to load:\", e.target.src)}\r\n                    />\r\n\r\n                ))\r\n            ) : (\r\n                <p>Loading images...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,iBAAiB,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxCD,SAAS,CAAC,MAAM;IACZ,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,IAAI,GAAG,MAAMR,iBAAiB,CAAC,CAAC;MACtCS,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC;MAClCF,SAAS,CAACE,IAAI,CAAC;IACnB,CAAC;IAEDD,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EACNT,SAAS,CAAC,MAAM;IACZO,MAAM,CAACM,OAAO,CAACC,GAAG,IAAIH,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEG,eAAe,CAACD,GAAG,CAACE,GAAG,CAAC,CAAC,CAAC;EAC9E,CAAC,EAAE,CAACT,MAAM,CAAC,CAAC;EAEZ,MAAMQ,eAAe,GAAIE,WAAW,IAAK;IACrC,MAAMC,WAAW,GAAGD,WAAW,CAACE,KAAK,CAAC,YAAY,CAAC;IAEnD,OAAOD,WAAW,GAAG;AAC7B,IAAIA,WAAW,CAAC,CAAC,CAAC,EAAE,GAAGD,WAAW;EAC9B,CAAC;EAED,oBACIb,OAAA;IAAAgB,QAAA,EACKb,MAAM,CAACc,MAAM,GAAG,CAAC,GACdd,MAAM,CAACe,GAAG,CAAC,CAACR,GAAG,EAAES,KAAK,kBAClBnB,OAAA;MAEIoB,GAAG,EAAET,eAAe,CAACD,GAAG,CAACE,GAAG,CAAE;MAC9BS,GAAG,EAAE,SAASF,KAAK,EAAG;MACtBG,KAAK,EAAC,KAAK;MACXC,OAAO,EAAGC,CAAC,IAAKjB,OAAO,CAACkB,KAAK,CAAC,uBAAuB,EAAED,CAAC,CAACE,MAAM,CAACN,GAAG;IAAE,GAJhED,KAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKb,CAEJ,CAAC,gBAEF9B,OAAA;MAAAgB,QAAA,EAAG;IAAiB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC1B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC5B,EAAA,CAxCWD,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}