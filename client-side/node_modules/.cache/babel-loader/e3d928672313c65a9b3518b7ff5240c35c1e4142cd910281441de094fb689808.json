{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = 'http://localhost:3000/users';\n\n// export const userLogin = async (user) => {\n//     let result = \"\";\n//     try {\n//         const response = await axios.post(`${API_URL}/log`, { name: user.field1, pass: user.field2 });\n//         result = response.data;\n//     } catch (error) {\n//         result = error.message;\n//     }\n//     return result;\n// };\n// export const userRegister = async (user) => {\n//     let result = \"\";\n//     try {\n//         const response = await axios.post(`${API_URL}/`, user);\n//         result = response.data;\n//     } catch (error) {\n//         result = error.message;\n//     }\n//     return result;\n// };\n// export const getByIdUser = async (id) => {\n//     let result\n//     try {\n//         const response = await axios.get(`${API_URL}/${id}`);\n//         result = response.data;\n//     } catch (error) {\n//         result = error.message\n//     }\n//     return result;\n// }\nexport const getMyArts = async id => {\n  let result = [];\n  try {\n    const response = await getByIdUser(id);\n    console.log(\"Response from getByIdUser:\", response);\n\n    // בדוק אם יש נתונים ומוודא שהשדה myArts קיים\n    if (response && response.myArts) {\n      result = response.myArts;\n    } else {\n      console.error(\"myArts not found in response:\", response);\n    }\n  } catch (error) {\n    console.error(\"Error fetching user arts:\", error.message);\n    result = [];\n  }\n  return result;\n};\nexport const getMyQuo = async id => {\n  let result = \"\";\n  try {\n    const response = await getByIdUser(id);\n    result = response.myQuotes;\n  } catch (error) {\n    result = error.message;\n  }\n  return result;\n};\nexport const removeQuote = async (id, quoteId) => {\n  let result = \"\";\n  try {\n    const response = await axios.put(`${API_URL}/quote/d/${id}`, {\n      \"quoteId\": quoteId\n    });\n    result = response.myQuotes;\n  } catch (error) {\n    result = error.message;\n  }\n  return result;\n};\nexport const addQuote = async (id, quoteId) => {\n  let result = \"\";\n  try {\n    const response = await axios.put(`${API_URL}/quote/${id}`, {\n      \"quoteId\": quoteId\n    });\n    result = response.myQuotes;\n  } catch (error) {\n    result = error.message;\n  }\n  return result;\n};\nexport const getMyBack = async id => {\n  let result = \"\";\n  try {\n    const response = await getByIdUser(id);\n    result = response.myBackgrounds;\n  } catch (error) {\n    result = error.message;\n  }\n  return result;\n};\nexport const removeBack = async (id, backId) => {\n  let result = \"\";\n  try {\n    const response = await axios.put(`${API_URL}/background/d/${id}`, {\n      \"backgroundId\": backId\n    });\n    console.log(backId);\n    result = response.myBackgrounds;\n  } catch (error) {\n    result = error.message;\n  }\n  return result;\n};\nexport const addBack = async (id, backId) => {\n  let result = null;\n  try {\n    const response = await axios.put(`${API_URL}/background/${id}`, {\n      \"backgroundId\": backId\n    });\n    console.log(response.data);\n    result = response.data.myBackgrounds;\n  } catch (error) {\n    result = error.message;\n  }\n  return result;\n};\n// export const getMySugg = async (id) => {\n\n//     let result = \"\";\n//     try {\n//         console.log(\"1\");\n//         const response = await getByIdUser(id)\n//         console.log(response.suggestions);\n//         result = response.suggestions;\n//     } catch (error) {\n//         result = error.message;\n//     }\n//     return result;\n// };\n// export const removeSugg = async (id, suggId) => {\n//     let result = \"\";\n//     try {\n//         const response = await axios.put(`${API_URL}/suggest/d/${id}`, { \"quoteId\": suggId.quoteId })\n//         result = response.suggestions;\n//     } catch (error) {\n//         result = error.message;\n//     }\n//     return result;\n// };\n// export const addSugg = async (id, sugg) => {\n//     let result = null;\n//     try {\n//         const response = await axios.put(`${API_URL}/suggest/${id}`, {\n//          \"text\": sugg.text,\n//             \"title\": sugg.title, \"groupId\": sugg.groupId\n//         })\n//         console.log(response.data);\n//         result = response.data.suggestions;\n//     } catch (error) {\n//         result = error.message;\n//     }\n//     return result;\n// };\n\nexport const userLogin = async user => {\n  let result = \"\";\n  try {\n    const response = await axios.post(`${API_URL}/log`, {\n      name: user.field1,\n      pass: user.field2\n    });\n    result = response.data;\n  } catch (error) {\n    result = error.message;\n  }\n  return result;\n};\nexport const userRegister = async user => {\n  let result = \"\";\n  try {\n    const response = await axios.post(`${API_URL}/`, user);\n    result = response.data;\n  } catch (error) {\n    result = error.message;\n  }\n  return result;\n};\nexport const getByIdUser = async id => {\n  let result;\n  try {\n    const response = await axios.get(`${API_URL}/${id}`);\n    result = response.data;\n  } catch (error) {\n    result = error.message;\n  }\n  return result;\n};\nexport const getMySugg = async id => {\n  let result = \"\";\n  try {\n    const response = await getByIdUser(id);\n    result = response.suggestions || [];\n  } catch (error) {\n    result = error.message;\n  }\n  return result;\n};\nexport const addSugg = async (id, sugg) => {\n  let result = null;\n  try {\n    const response = await axios.put(`${API_URL}/suggest/${id}`, {\n      \"text\": sugg.text,\n      \"title\": sugg.title,\n      \"groupId\": sugg.groupId\n    });\n    result = response.data.suggestions || [];\n  } catch (error) {\n    result = error.message;\n  }\n  return result;\n};","map":{"version":3,"names":["axios","API_URL","getMyArts","id","result","response","getByIdUser","console","log","myArts","error","message","getMyQuo","myQuotes","removeQuote","quoteId","put","addQuote","getMyBack","myBackgrounds","removeBack","backId","addBack","data","userLogin","user","post","name","field1","pass","field2","userRegister","get","getMySugg","suggestions","addSugg","sugg","text","title","groupId"],"sources":["C:/Users/ME/Desktop/בלי תכנות/node.js/finalProject/client-side/src/serivces/userService.js"],"sourcesContent":["import axios from \"axios\";\r\nconst API_URL = 'http://localhost:3000/users';\r\n\r\n// export const userLogin = async (user) => {\r\n//     let result = \"\";\r\n//     try {\r\n//         const response = await axios.post(`${API_URL}/log`, { name: user.field1, pass: user.field2 });\r\n//         result = response.data;\r\n//     } catch (error) {\r\n//         result = error.message;\r\n//     }\r\n//     return result;\r\n// };\r\n// export const userRegister = async (user) => {\r\n//     let result = \"\";\r\n//     try {\r\n//         const response = await axios.post(`${API_URL}/`, user);\r\n//         result = response.data;\r\n//     } catch (error) {\r\n//         result = error.message;\r\n//     }\r\n//     return result;\r\n// };\r\n// export const getByIdUser = async (id) => {\r\n//     let result\r\n//     try {\r\n//         const response = await axios.get(`${API_URL}/${id}`);\r\n//         result = response.data;\r\n//     } catch (error) {\r\n//         result = error.message\r\n//     }\r\n//     return result;\r\n// }\r\nexport const getMyArts = async (id) => {\r\n    let result = [];\r\n    try {\r\n        const response = await getByIdUser(id);\r\n        console.log(\"Response from getByIdUser:\", response);\r\n\r\n        // בדוק אם יש נתונים ומוודא שהשדה myArts קיים\r\n        if (response && response.myArts) {\r\n            result = response.myArts;\r\n        } else {\r\n            console.error(\"myArts not found in response:\", response);\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error fetching user arts:\", error.message);\r\n        result = [];\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const getMyQuo = async (id) => {\r\n    let result = \"\";\r\n    try {\r\n        const response = await getByIdUser(id)\r\n        result = response.myQuotes;\r\n    } catch (error) {\r\n        result = error.message;\r\n    }\r\n    return result;\r\n};\r\nexport const removeQuote = async (id, quoteId) => {\r\n    let result = \"\";\r\n    try {\r\n        const response = await axios.put(`${API_URL}/quote/d/${id}`, { \"quoteId\": quoteId })\r\n        result = response.myQuotes;\r\n    } catch (error) {\r\n        result = error.message;\r\n    }\r\n    return result;\r\n};\r\nexport const addQuote = async (id, quoteId) => {\r\n    let result = \"\";\r\n    try {\r\n        const response = await axios.put(`${API_URL}/quote/${id}`, { \"quoteId\": quoteId })\r\n        result = response.myQuotes;\r\n    } catch (error) {\r\n        result = error.message;\r\n    }\r\n    return result;\r\n};\r\nexport const getMyBack = async (id) => {\r\n    let result = \"\";\r\n    try {\r\n        const response = await getByIdUser(id)\r\n        result = response.myBackgrounds;\r\n    } catch (error) {\r\n        result = error.message;\r\n    }\r\n    return result;\r\n};\r\nexport const removeBack = async (id, backId) => {\r\n    let result = \"\";\r\n    try {\r\n        const response = await axios.put(`${API_URL}/background/d/${id}`, { \"backgroundId\": backId })\r\n        console.log(backId);\r\n        result = response.myBackgrounds;\r\n    } catch (error) {\r\n        result = error.message;\r\n    }\r\n    return result;\r\n};\r\nexport const addBack = async (id, backId) => {\r\n    let result = null;\r\n    try {\r\n        const response = await axios.put(`${API_URL}/background/${id}`, { \"backgroundId\": backId })\r\n        console.log(response.data);\r\n        result = response.data.myBackgrounds;\r\n    } catch (error) {\r\n        result = error.message;\r\n    }\r\n    return result;\r\n};\r\n// export const getMySugg = async (id) => {\r\n    \r\n//     let result = \"\";\r\n//     try {\r\n//         console.log(\"1\");\r\n//         const response = await getByIdUser(id)\r\n//         console.log(response.suggestions);\r\n//         result = response.suggestions;\r\n//     } catch (error) {\r\n//         result = error.message;\r\n//     }\r\n//     return result;\r\n// };\r\n// export const removeSugg = async (id, suggId) => {\r\n//     let result = \"\";\r\n//     try {\r\n//         const response = await axios.put(`${API_URL}/suggest/d/${id}`, { \"quoteId\": suggId.quoteId })\r\n//         result = response.suggestions;\r\n//     } catch (error) {\r\n//         result = error.message;\r\n//     }\r\n//     return result;\r\n// };\r\n// export const addSugg = async (id, sugg) => {\r\n//     let result = null;\r\n//     try {\r\n//         const response = await axios.put(`${API_URL}/suggest/${id}`, {\r\n//          \"text\": sugg.text,\r\n//             \"title\": sugg.title, \"groupId\": sugg.groupId\r\n//         })\r\n//         console.log(response.data);\r\n//         result = response.data.suggestions;\r\n//     } catch (error) {\r\n//         result = error.message;\r\n//     }\r\n//     return result;\r\n// };\r\n\r\nexport const userLogin = async (user) => {\r\n    let result = \"\";\r\n    try {\r\n        const response = await axios.post(`${API_URL}/log`, { name: user.field1, pass: user.field2 });\r\n        result = response.data;\r\n    } catch (error) {\r\n        result = error.message;\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const userRegister = async (user) => {\r\n    let result = \"\";\r\n    try {\r\n        const response = await axios.post(`${API_URL}/`, user);\r\n        result = response.data;\r\n    } catch (error) {\r\n        result = error.message;\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const getByIdUser = async (id) => {\r\n    let result;\r\n    try {\r\n        const response = await axios.get(`${API_URL}/${id}`);\r\n        result = response.data;\r\n    } catch (error) {\r\n        result = error.message;\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const getMySugg = async (id) => {\r\n    let result = \"\";\r\n    try {\r\n        const response = await getByIdUser(id);\r\n        result = response.suggestions || [];\r\n    } catch (error) {\r\n        result = error.message;\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const addSugg = async (id, sugg) => {\r\n    let result = null;\r\n    try {\r\n        const response = await axios.put(`${API_URL}/suggest/${id}`, {\r\n            \"text\": sugg.text,\r\n            \"title\": sugg.title,\r\n            \"groupId\": sugg.groupId\r\n        });\r\n        result = response.data.suggestions || [];\r\n    } catch (error) {\r\n        result = error.message;\r\n    }\r\n    return result;\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,6BAA6B;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,SAAS,GAAG,MAAOC,EAAE,IAAK;EACnC,IAAIC,MAAM,GAAG,EAAE;EACf,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,WAAW,CAACH,EAAE,CAAC;IACtCI,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEH,QAAQ,CAAC;;IAEnD;IACA,IAAIA,QAAQ,IAAIA,QAAQ,CAACI,MAAM,EAAE;MAC7BL,MAAM,GAAGC,QAAQ,CAACI,MAAM;IAC5B,CAAC,MAAM;MACHF,OAAO,CAACG,KAAK,CAAC,+BAA+B,EAAEL,QAAQ,CAAC;IAC5D;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;IACZH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACC,OAAO,CAAC;IACzDP,MAAM,GAAG,EAAE;EACf;EACA,OAAOA,MAAM;AACjB,CAAC;AAED,OAAO,MAAMQ,QAAQ,GAAG,MAAOT,EAAE,IAAK;EAClC,IAAIC,MAAM,GAAG,EAAE;EACf,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,WAAW,CAACH,EAAE,CAAC;IACtCC,MAAM,GAAGC,QAAQ,CAACQ,QAAQ;EAC9B,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZN,MAAM,GAAGM,KAAK,CAACC,OAAO;EAC1B;EACA,OAAOP,MAAM;AACjB,CAAC;AACD,OAAO,MAAMU,WAAW,GAAG,MAAAA,CAAOX,EAAE,EAAEY,OAAO,KAAK;EAC9C,IAAIX,MAAM,GAAG,EAAE;EACf,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,YAAYE,EAAE,EAAE,EAAE;MAAE,SAAS,EAAEY;IAAQ,CAAC,CAAC;IACpFX,MAAM,GAAGC,QAAQ,CAACQ,QAAQ;EAC9B,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZN,MAAM,GAAGM,KAAK,CAACC,OAAO;EAC1B;EACA,OAAOP,MAAM;AACjB,CAAC;AACD,OAAO,MAAMa,QAAQ,GAAG,MAAAA,CAAOd,EAAE,EAAEY,OAAO,KAAK;EAC3C,IAAIX,MAAM,GAAG,EAAE;EACf,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,UAAUE,EAAE,EAAE,EAAE;MAAE,SAAS,EAAEY;IAAQ,CAAC,CAAC;IAClFX,MAAM,GAAGC,QAAQ,CAACQ,QAAQ;EAC9B,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZN,MAAM,GAAGM,KAAK,CAACC,OAAO;EAC1B;EACA,OAAOP,MAAM;AACjB,CAAC;AACD,OAAO,MAAMc,SAAS,GAAG,MAAOf,EAAE,IAAK;EACnC,IAAIC,MAAM,GAAG,EAAE;EACf,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,WAAW,CAACH,EAAE,CAAC;IACtCC,MAAM,GAAGC,QAAQ,CAACc,aAAa;EACnC,CAAC,CAAC,OAAOT,KAAK,EAAE;IACZN,MAAM,GAAGM,KAAK,CAACC,OAAO;EAC1B;EACA,OAAOP,MAAM;AACjB,CAAC;AACD,OAAO,MAAMgB,UAAU,GAAG,MAAAA,CAAOjB,EAAE,EAAEkB,MAAM,KAAK;EAC5C,IAAIjB,MAAM,GAAG,EAAE;EACf,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,iBAAiBE,EAAE,EAAE,EAAE;MAAE,cAAc,EAAEkB;IAAO,CAAC,CAAC;IAC7Fd,OAAO,CAACC,GAAG,CAACa,MAAM,CAAC;IACnBjB,MAAM,GAAGC,QAAQ,CAACc,aAAa;EACnC,CAAC,CAAC,OAAOT,KAAK,EAAE;IACZN,MAAM,GAAGM,KAAK,CAACC,OAAO;EAC1B;EACA,OAAOP,MAAM;AACjB,CAAC;AACD,OAAO,MAAMkB,OAAO,GAAG,MAAAA,CAAOnB,EAAE,EAAEkB,MAAM,KAAK;EACzC,IAAIjB,MAAM,GAAG,IAAI;EACjB,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,eAAeE,EAAE,EAAE,EAAE;MAAE,cAAc,EAAEkB;IAAO,CAAC,CAAC;IAC3Fd,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACkB,IAAI,CAAC;IAC1BnB,MAAM,GAAGC,QAAQ,CAACkB,IAAI,CAACJ,aAAa;EACxC,CAAC,CAAC,OAAOT,KAAK,EAAE;IACZN,MAAM,GAAGM,KAAK,CAACC,OAAO;EAC1B;EACA,OAAOP,MAAM;AACjB,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMoB,SAAS,GAAG,MAAOC,IAAI,IAAK;EACrC,IAAIrB,MAAM,GAAG,EAAE;EACf,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAAC0B,IAAI,CAAC,GAAGzB,OAAO,MAAM,EAAE;MAAE0B,IAAI,EAAEF,IAAI,CAACG,MAAM;MAAEC,IAAI,EAAEJ,IAAI,CAACK;IAAO,CAAC,CAAC;IAC7F1B,MAAM,GAAGC,QAAQ,CAACkB,IAAI;EAC1B,CAAC,CAAC,OAAOb,KAAK,EAAE;IACZN,MAAM,GAAGM,KAAK,CAACC,OAAO;EAC1B;EACA,OAAOP,MAAM;AACjB,CAAC;AAED,OAAO,MAAM2B,YAAY,GAAG,MAAON,IAAI,IAAK;EACxC,IAAIrB,MAAM,GAAG,EAAE;EACf,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAAC0B,IAAI,CAAC,GAAGzB,OAAO,GAAG,EAAEwB,IAAI,CAAC;IACtDrB,MAAM,GAAGC,QAAQ,CAACkB,IAAI;EAC1B,CAAC,CAAC,OAAOb,KAAK,EAAE;IACZN,MAAM,GAAGM,KAAK,CAACC,OAAO;EAC1B;EACA,OAAOP,MAAM;AACjB,CAAC;AAED,OAAO,MAAME,WAAW,GAAG,MAAOH,EAAE,IAAK;EACrC,IAAIC,MAAM;EACV,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACgC,GAAG,CAAC,GAAG/B,OAAO,IAAIE,EAAE,EAAE,CAAC;IACpDC,MAAM,GAAGC,QAAQ,CAACkB,IAAI;EAC1B,CAAC,CAAC,OAAOb,KAAK,EAAE;IACZN,MAAM,GAAGM,KAAK,CAACC,OAAO;EAC1B;EACA,OAAOP,MAAM;AACjB,CAAC;AAED,OAAO,MAAM6B,SAAS,GAAG,MAAO9B,EAAE,IAAK;EACnC,IAAIC,MAAM,GAAG,EAAE;EACf,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,WAAW,CAACH,EAAE,CAAC;IACtCC,MAAM,GAAGC,QAAQ,CAAC6B,WAAW,IAAI,EAAE;EACvC,CAAC,CAAC,OAAOxB,KAAK,EAAE;IACZN,MAAM,GAAGM,KAAK,CAACC,OAAO;EAC1B;EACA,OAAOP,MAAM;AACjB,CAAC;AAED,OAAO,MAAM+B,OAAO,GAAG,MAAAA,CAAOhC,EAAE,EAAEiC,IAAI,KAAK;EACvC,IAAIhC,MAAM,GAAG,IAAI;EACjB,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,YAAYE,EAAE,EAAE,EAAE;MACzD,MAAM,EAAEiC,IAAI,CAACC,IAAI;MACjB,OAAO,EAAED,IAAI,CAACE,KAAK;MACnB,SAAS,EAAEF,IAAI,CAACG;IACpB,CAAC,CAAC;IACFnC,MAAM,GAAGC,QAAQ,CAACkB,IAAI,CAACW,WAAW,IAAI,EAAE;EAC5C,CAAC,CAAC,OAAOxB,KAAK,EAAE;IACZN,MAAM,GAAGM,KAAK,CAACC,OAAO;EAC1B;EACA,OAAOP,MAAM;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}