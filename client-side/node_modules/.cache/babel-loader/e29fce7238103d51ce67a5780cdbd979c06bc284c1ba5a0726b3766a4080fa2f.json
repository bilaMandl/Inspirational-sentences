{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ME\\\\Desktop\\\\\\u05D1\\u05DC\\u05D9 \\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\node.js\\\\finalProject\\\\client-side\\\\src\\\\components\\\\backgrounds.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getAllBackgrounds } from \"../serivces/backgroundService\";\nimport { addBack, getMyBack, removeBack } from \"../serivces/userService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Backgrounds = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [imageLoadErrors, setImageLoadErrors] = useState(new Set());\n  const userId = JSON.parse(localStorage.getItem(\"user\")).id;\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const data = await getAllBackgrounds();\n        const validImage = data.map(img => ({\n          ...img,\n          url: convertDriveUrl(img.url)\n        }));\n        setImages(prevImage => {\n          const isSame = JSON.stringify(prevImage) === JSON.stringify(validImage);\n          return isSame ? prevImage : validImage;\n        });\n      } catch (error) {\n        console.error(\"Error fetching images:\", error);\n        // טיפול בשגיאה - לדוגמה, ניתן להחזיר ערך ברירת מחדל או להציג הודעת שגיאה למשתמש\n      }\n    };\n    const fetchFavorites = async () => {\n      try {\n        const myBackgrounds = await getMyBack(); // קבלת רשימת ה-IDs של המועדפים\n        setFavorites(myBackgrounds); // שמירה במצב\n      } catch (err) {\n        console.error(\"Error fetching favorites:\", err);\n      }\n    };\n    fetchImages();\n    fetchFavorites();\n  }, []);\n  const convertDriveUrl = originalUrl => {\n    if (!originalUrl) return '/d.jpg';\n    const fileIdMatch = originalUrl.match(/[-\\w]{25,}/);\n    return fileIdMatch ? `https://drive.google.com/thumbnail?id=${fileIdMatch[0]}&sz=w1000` : originalUrl;\n  };\n  const like = async id => {\n    try {\n      if (favorites.includes(id)) {\n        await removeBack(id); // מסיר מהשרת\n      } else {\n        await addBack(id); // מוסיף לשרת\n      }\n\n      // שליפת רשימת המועדפים מחדש מהשרת כדי להבטיח עקביות\n      const updatedFavorites = await getMyBac();\n      setFavorites(updatedFavorites);\n    } catch (err) {\n      console.error(\"Failed to update favorite:\", err);\n    }\n  };\n  // useEffect(() => {\n  //     const imgShowing = async () => {\n  //         try {\n  //             const data = await getAllBackgrounds();\n  //             const validImages = data.map(img => ({\n  //                 ...img,\n  //                 url: convertDriveUrl(img.url),\n  //             }));\n  //             setImages(validImages);\n  //         } catch (error) {\n  //             console.error(\"Failed to fetch backgrounds:\", error);\n  //         }\n  //     };\n\n  //     imgShowing();\n  // }, []);\n\n  // const handleFavoriteClick = async (id) => {\n  //     try {\n  //         if (favorites.includes(id)) {\n  //             await removeBack(userId, id);\n  //         } else {\n  //             await addBack(userId, id);\n  //         }\n  //         const userFavorites = await getMyBack(userId);\n  //         setFavorites(userFavorites);\n  //     } catch (err) {\n  //         console.error(\"Failed to update favorite:\", err);\n  //     }\n  // };\n\n  // const convertDriveUrl = (originalUrl) => {\n  //     if (!originalUrl)             return \"/d.jpg\"\n\n  //     const fileIdMatch = originalUrl.match(/[-\\w]{25,}/);\n  //     if (!fileIdMatch) {\n  //         console.warn(\"Invalid URL:\", originalUrl);\n  //         return \"/d.jpg\"\n  //     }\n  //     const convertedUrl = `https://drive.google.com/uc?export=view&id=${fileIdMatch[0]}`;\n  //     console.log(\"Original URL:\", originalUrl);\n  //     console.log(\"Converted URL:\", convertedUrl);\n  //     return convertedUrl;\n  // };\n\n  // const like = async (id) => {\n  //     try {\n  //         if (favorites.includes(id)) {\n  //             await removeBack(id);\n  //         } else {\n  //             await addBack(id);\n  //         }\n  //         const updatedFavorites = await getMyBack();\n  //         setFavorites(updatedFavorites);\n  //     } catch (error) {\n  //         console.error(\"Failed to update favorite:\", error);\n  //     }\n  // };\n\n  // return (\n  //     <div>\n  //         {images.length > 0 ? (\n  //             images.map((img, index) => (\n  //                 <div key={img.id} className=\"image-wrapper\">\n  //                     <img\n  //                         src={img.url}\n  //                         alt={`Image ${index}`}\n  //                         width=\"200\"\n  //                         onError={(e) => {\n  //                             if (!imageLoadErrors.has(img.url)) {\n  //                                 setImageLoadErrors(prev => new Set(prev).add(img.url));\n  //                                 e.target.src = \"/d.jpg\";\n  //                                 console.error(\"Image failed to load:\", e.target.src);\n  //                             }\n  //                         }}\n  //                     />\n  //                     <div className=\"button-container\">\n  //                         <button className=\"heart-button\" onClick={() => like(img.id)}>like!</button>\n  //                     </div>\n  //                 </div>\n  //             ))\n  //         ) : (\n  //             <p>Loading images...</p>\n  //         )}\n  //     </div>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-container\",\n    children: images.length > 0 ? images.map((img, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: img.url // ה-URL כבר מתוקן מראש\n        ,\n        alt: `Image ${index}`,\n        width: \"200\",\n        onError: e => {\n          e.target.src = \"../d.jpg\"; // הצג תמונה ברירת מחדל במקרה של שגיאה\n          console.error(\"Image failed to load:\", e.target.src);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"heart-button\",\n          onClick: () => like(img.Id),\n          children: \"like!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }, this)]\n    }, img.Id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading images...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n  d;\n};\n_s(Backgrounds, \"9+LGo0mH01s4RQvcgRypbt3lf5I=\");\n_c = Backgrounds;\nvar _c;\n$RefreshReg$(_c, \"Backgrounds\");","map":{"version":3,"names":["useEffect","useState","getAllBackgrounds","addBack","getMyBack","removeBack","jsxDEV","_jsxDEV","Backgrounds","_s","images","setImages","favorites","setFavorites","imageLoadErrors","setImageLoadErrors","Set","userId","JSON","parse","localStorage","getItem","id","fetchImages","data","validImage","map","img","url","convertDriveUrl","prevImage","isSame","stringify","error","console","fetchFavorites","myBackgrounds","err","originalUrl","fileIdMatch","match","like","includes","updatedFavorites","getMyBac","className","children","length","index","src","alt","width","onError","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Id","d","_c","$RefreshReg$"],"sources":["C:/Users/ME/Desktop/בלי תכנות/node.js/finalProject/client-side/src/components/backgrounds.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { getAllBackgrounds } from \"../serivces/backgroundService\";\r\nimport { addBack, getMyBack, removeBack } from \"../serivces/userService\";\r\n\r\n\r\n\r\nexport const Backgrounds = () => {\r\n    const [images, setImages] = useState([]);\r\n    const [favorites, setFavorites] = useState([]);\r\n    const [imageLoadErrors, setImageLoadErrors] = useState(new Set());\r\n    const userId = JSON.parse(localStorage.getItem(\"user\")).id;\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchImages = async () => {\r\n            try {\r\n                const data = await getAllBackgrounds();\r\n                const validImage = data.map(img => ({ ...img, url: convertDriveUrl(img.url) }));\r\n\r\n                setImages(prevImage => {\r\n                    const isSame = JSON.stringify(prevImage) === JSON.stringify(validImage);\r\n                    return isSame ? prevImage : validImage;\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Error fetching images:\", error);\r\n                // טיפול בשגיאה - לדוגמה, ניתן להחזיר ערך ברירת מחדל או להציג הודעת שגיאה למשתמש\r\n            }\r\n        };\r\n        const fetchFavorites = async () => {\r\n            try {\r\n                const myBackgrounds = await getMyBack(); // קבלת רשימת ה-IDs של המועדפים\r\n                setFavorites(myBackgrounds); // שמירה במצב\r\n            } catch (err) {\r\n                console.error(\"Error fetching favorites:\", err);\r\n            }\r\n        };\r\n        fetchImages();\r\n        fetchFavorites();\r\n    }, []);\r\n\r\n\r\n    const convertDriveUrl = (originalUrl) => {\r\n        if (!originalUrl) return '/d.jpg';\r\n        const fileIdMatch = originalUrl.match(/[-\\w]{25,}/);\r\n        return fileIdMatch ? `https://drive.google.com/thumbnail?id=${fileIdMatch[0]}&sz=w1000` : originalUrl\r\n    };\r\n    const like = async (id) => {\r\n        try {\r\n            if (favorites.includes(id)) {\r\n                await removeBack(id);  // מסיר מהשרת\r\n            } else {\r\n                await addBack(id);  // מוסיף לשרת\r\n            }\r\n\r\n            // שליפת רשימת המועדפים מחדש מהשרת כדי להבטיח עקביות\r\n            const updatedFavorites = await getMyBac();\r\n            setFavorites(updatedFavorites);\r\n        } catch (err) {\r\n            console.error(\"Failed to update favorite:\", err);\r\n        }\r\n    };\r\n    // useEffect(() => {\r\n    //     const imgShowing = async () => {\r\n    //         try {\r\n    //             const data = await getAllBackgrounds();\r\n    //             const validImages = data.map(img => ({\r\n    //                 ...img,\r\n    //                 url: convertDriveUrl(img.url),\r\n    //             }));\r\n    //             setImages(validImages);\r\n    //         } catch (error) {\r\n    //             console.error(\"Failed to fetch backgrounds:\", error);\r\n    //         }\r\n    //     };\r\n\r\n    //     imgShowing();\r\n    // }, []);\r\n\r\n    // const handleFavoriteClick = async (id) => {\r\n    //     try {\r\n    //         if (favorites.includes(id)) {\r\n    //             await removeBack(userId, id);\r\n    //         } else {\r\n    //             await addBack(userId, id);\r\n    //         }\r\n    //         const userFavorites = await getMyBack(userId);\r\n    //         setFavorites(userFavorites);\r\n    //     } catch (err) {\r\n    //         console.error(\"Failed to update favorite:\", err);\r\n    //     }\r\n    // };\r\n\r\n    // const convertDriveUrl = (originalUrl) => {\r\n    //     if (!originalUrl)             return \"/d.jpg\"\r\n\r\n    //     const fileIdMatch = originalUrl.match(/[-\\w]{25,}/);\r\n    //     if (!fileIdMatch) {\r\n    //         console.warn(\"Invalid URL:\", originalUrl);\r\n    //         return \"/d.jpg\"\r\n    //     }\r\n    //     const convertedUrl = `https://drive.google.com/uc?export=view&id=${fileIdMatch[0]}`;\r\n    //     console.log(\"Original URL:\", originalUrl);\r\n    //     console.log(\"Converted URL:\", convertedUrl);\r\n    //     return convertedUrl;\r\n    // };\r\n\r\n\r\n    // const like = async (id) => {\r\n    //     try {\r\n    //         if (favorites.includes(id)) {\r\n    //             await removeBack(id);\r\n    //         } else {\r\n    //             await addBack(id);\r\n    //         }\r\n    //         const updatedFavorites = await getMyBack();\r\n    //         setFavorites(updatedFavorites);\r\n    //     } catch (error) {\r\n    //         console.error(\"Failed to update favorite:\", error);\r\n    //     }\r\n    // };\r\n\r\n    // return (\r\n    //     <div>\r\n    //         {images.length > 0 ? (\r\n    //             images.map((img, index) => (\r\n    //                 <div key={img.id} className=\"image-wrapper\">\r\n    //                     <img\r\n    //                         src={img.url}\r\n    //                         alt={`Image ${index}`}\r\n    //                         width=\"200\"\r\n    //                         onError={(e) => {\r\n    //                             if (!imageLoadErrors.has(img.url)) {\r\n    //                                 setImageLoadErrors(prev => new Set(prev).add(img.url));\r\n    //                                 e.target.src = \"/d.jpg\";\r\n    //                                 console.error(\"Image failed to load:\", e.target.src);\r\n    //                             }\r\n    //                         }}\r\n    //                     />\r\n    //                     <div className=\"button-container\">\r\n    //                         <button className=\"heart-button\" onClick={() => like(img.id)}>like!</button>\r\n    //                     </div>\r\n    //                 </div>\r\n    //             ))\r\n    //         ) : (\r\n    //             <p>Loading images...</p>\r\n    //         )}\r\n    //     </div>\r\n    // );\r\n\r\n    return (\r\n        <div className=\"image-container\">\r\n            {images.length > 0 ? (\r\n                images.map((img, index) => (\r\n                    <div key={img.Id} className=\"image-wrapper\">\r\n                        <img\r\n                            src={img.url} // ה-URL כבר מתוקן מראש\r\n                            alt={`Image ${index}`}\r\n                            width=\"200\"\r\n                            onError={(e) => {\r\n                                e.target.src = \"../d.jpg\"; // הצג תמונה ברירת מחדל במקרה של שגיאה\r\n                                console.error(\"Image failed to load:\", e.target.src);\r\n                            }}\r\n                        />\r\n                        <div className=\"button-container\">\r\n                            <button className=\"heart-button\" onClick={() => like(img.Id)}>like!</button>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>Loading images...</p>\r\n            )}\r\n        </div>\r\n    );\r\nd\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}